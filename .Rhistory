setwd("/media/sf_oipm/code/repo/")
setwd("/media/sf_oipm/code/stop_search/")
stops.csv <- "StopSearch_DNG_20180721.csv"
# How the date is formatted
dateFormat <- "%d/%m/%Y %I:%M:%S %p"
# Read data
stops.all <- read.csv(stops.csv, stringsAsFactors = FALSE)
# Parse date-time into year, date, day, and time
stops.all <- stops.all %>% mutate(
event.year = sapply(EventDate, function (date) format(as.Date(date, format=dateFormat), "%Y")),
event.month = sapply(EventDate, function (date) format(as.Date(date, format=dateFormat), "%b")),
month = match(event.month, months),
event.date = sapply(EventDate, function (date) format(as.Date(date, format=dateFormat),"%b %d, %Y")),
event.day = sapply(EventDate, function (date) weekdays(as.Date(date, format=dateFormat))),
event.time = sapply(EventDate, function (date) format(as.Date(date, format=dateFormat),"%I:%M:%S %p")),
event.time.24 = sapply(EventDate, function (date) format(as.Date(date, format=dateFormat),"%H:%M:%S"))
)
require(dplyr)
# Parse date-time into year, date, day, and time
stops.all <- stops.all %>% mutate(
event.year = sapply(EventDate, function (date) format(as.Date(date, format=dateFormat), "%Y")),
event.month = sapply(EventDate, function (date) format(as.Date(date, format=dateFormat), "%b")),
month = match(event.month, months),
event.date = sapply(EventDate, function (date) format(as.Date(date, format=dateFormat),"%b %d, %Y")),
event.day = sapply(EventDate, function (date) weekdays(as.Date(date, format=dateFormat))),
event.time = sapply(EventDate, function (date) format(as.Date(date, format=dateFormat),"%I:%M:%S %p")),
event.time.24 = sapply(EventDate, function (date) format(as.Date(date, format=dateFormat),"%H:%M:%S"))
)
month.abbrs <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
# Parse date-time into year, date, day, and time
stops.all <- stops.all %>% mutate(
event.date = as.Date(date, format=dateFormat),
event.year = sapply(EventDate, function (date) format(event.date, "%Y")),
event.month = sapply(EventDate, function (date) format(event.date, "%b")),
month = match(event.month, month.abbrs),
event.date = sapply(EventDate, function (date) format(event.date, "%b %d, %Y")),
event.day = sapply(EventDate, function (date) weekdays(event.date)),
event.time = sapply(EventDate, function (date) format(event.date, "%I:%M:%S %p")),
event.time.24 = sapply(EventDate, function (date) format(event.date, "%H:%M:%S"))
)
head(stops.all)
# Parse date-time into year, date, day, and time
stops.all <- stops.all %>% mutate(
event.date = as.Date(EventDate, format=dateFormat),
event.year = format(event.date, "%Y"))
# Parse date-time into year, date, day, and time
stops.all <- stops.all %>% mutate(
event.date = as.Date(EventDate, format=dateFormat),
event.year = format(event.date, "%Y"),
event.month = format(event.date, "%b"),
month = match(event.month, month.abbrs),
event.date = format(event.date, "%b %d, %Y"),
event.day = weekdays(event.date),
event.time = format(event.date, "%I:%M:%S %p"),
event.time.24 = format(event.date, "%H:%M:%S")
)
# Parse date-time into year, date, day, and time
stops.all <- stops.all %>% mutate(
event.date = as.Date(EventDate, format=dateFormat),
event.year = format(event.date, "%Y"),
event.month = format(event.date, "%b"),
month = match(event.month, month.abbrs),
event.date.str = format(event.date, "%b %d, %Y"),
event.day = weekdays(event.date),
event.time = format(event.date, "%I:%M:%S %p"),
event.time.24 = format(event.date, "%H:%M:%S")
)
# Parse Actions Taken column into multiple columns
possible.actions <- c(
"Stop Results",
"Subject Type",
"Search Occurred",
"Evidence Seized",
"Consent To Search",
"Exit Vehicle",
"Search Type Pat Down",
"Search Types",
"Consent Form Completed",
"Legal Basises",
"Evidence Types",
"StripBody Cavity Search")
# Add a column for each possible action
# Can't extract all columns at the same time because the ActionsTaken column does not always contain the same values
# Instead, we loop over all the possible actions and extract a column for each individually
for (action in possible.actions) {
regex.for.action <- paste(action, ": ([\\w\\s]*)", sep = "")
stops.all <- stops.all %>% extract(ActionsTaken, c(action), regex.for.action, remove = FALSE)
}
